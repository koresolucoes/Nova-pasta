export const supabaseSchema = `
-- Habilita a extensão para gerar UUIDs, útil para chaves primárias.
create extension if not exists "uuid-ossp" with schema extensions;

-- Tabela para armazenar conexões com a API da Meta.
create table public.meta_connections (
  id uuid primary key default extensions.uuid_generate_v4(),
  name text not null,
  waba_id text not null,
  phone_number_id text not null,
  api_token text not null,
  created_at timestamptz default now() not null
);
comment on table public.meta_connections is 'Armazena as credenciais para conexão com a API da Meta.';

-- Tabela para armazenar os funis de vendas. Cada funil contém suas próprias colunas.
create table public.funnels (
  id uuid primary key default extensions.uuid_generate_v4(),
  name text not null,
  columns jsonb not null,
  created_at timestamptz default now() not null
);
comment on table public.funnels is 'Armazena múltiplos funis de venda, cada um com suas próprias colunas (etapas).';

-- Tabela para armazenar os contatos.
create table public.contacts (
  id bigint generated by default as identity primary key,
  name text not null,
  phone text not null unique,
  tags text[] default '{}'::text[],
  last_interaction timestamptz,
  is_24h_window_open boolean default false not null,
  is_opted_out_of_automations boolean default false not null,
  funnel_column_id uuid, -- Armazena o ID da coluna (etapa) que está dentro do JSONB de um funil
  custom_fields jsonb,
  created_at timestamptz default now() not null
);
comment on table public.contacts is 'Armazena todos os contatos da plataforma.';

-- Tabela para as campanhas de marketing.
create table public.campaigns (
  id bigint generated by default as identity primary key,
  name text not null,
  status text not null,
  sent_count integer default 0 not null,
  failed_count integer default 0 not null,
  total_count integer default 0 not null,
  read_rate real default 0,
  sent_date timestamptz,
  template_id text, -- Pode ser um UUID local ou um ID da Meta
  target jsonb,
  logs jsonb,
  created_at timestamptz default now() not null
);
comment on table public.campaigns is 'Gerencia as campanhas de disparo em massa.';

-- Tabela para os modelos de mensagem (HSM).
create table public.message_templates (
  id uuid primary key default extensions.uuid_generate_v4(),
  meta_id text,
  name text not null,
  category text not null,
  language text not null,
  status text not null,
  components jsonb not null,
  rejection_reason text,
  created_at timestamptz default now() not null
);
comment on table public.message_templates is 'Armazena os modelos de mensagem (HSM) locais e sincronizados.';

-- Tabela para os WhatsApp Flows.
create table public.whatsapp_flows (
  id uuid primary key default extensions.uuid_generate_v4(),
  meta_flow_id text,
  name text not null,
  endpoint_uri text,
  status text not null,
  origin text,
  version text not null,
  data_api_version text not null,
  routing_model jsonb,
  screens jsonb,
  created_at timestamptz default now() not null
);
comment on table public.whatsapp_flows is 'Armazena os WhatsApp Flows criados.';

-- Tabela para as automações.
create table public.automations (
  id uuid primary key default extensions.uuid_generate_v4(),
  name text not null,
  status text not null,
  nodes jsonb,
  edges jsonb,
  created_at timestamptz default now() not null,
  allow_reactivation boolean default true not null,
  block_on_open_chat boolean default false not null
);
comment on table public.automations is 'Armazena os fluxos de automação.';

-- Tabela para as conversas do chat.
create table public.conversations (
  contact_id bigint primary key references public.contacts(id) on delete cascade,
  messages jsonb default '[]'::jsonb,
  unread_count integer default 0 not null,
  updated_at timestamptz default now() not null
);
comment on table public.conversations is 'Armazena o histórico de chat de cada contato.';

-- Habilitar Row Level Security (RLS) e criar políticas básicas.
-- Isso permite que a chave de API pública (anon key) leia e escreva os dados.
-- Em um cenário com múltiplos usuários, você criaria políticas mais restritivas.

alter table public.meta_connections enable row level security;
alter table public.funnels enable row level security;
alter table public.contacts enable row level security;
alter table public.campaigns enable row level security;
alter table public.message_templates enable row level security;
alter table public.whatsapp_flows enable row level security;
alter table public.automations enable row level security;
alter table public.conversations enable row level security;

create policy "Public access" on public.meta_connections for all using (true) with check (true);
create policy "Public access" on public.funnels for all using (true) with check (true);
create policy "Public access" on public.contacts for all using (true) with check (true);
create policy "Public access" on public.campaigns for all using (true) with check (true);
create policy "Public access" on public.message_templates for all using (true) with check (true);
create policy "Public access" on public.whatsapp_flows for all using (true) with check (true);
create policy "Public access" on public.automations for all using (true) with check (true);
create policy "Public access" on public.conversations for all using (true) with check (true);
`;